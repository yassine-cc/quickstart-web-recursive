name: TestDriver.ai / Generate / Exploratory

permissions:
  actions: write
  contents: write
  statuses: write
  pull-requests: write

on:
  workflow_call:
    inputs:
      website-url:
        type: string
        required: true
      depth:
        type: number
        required: true
      max-depth:
        type: number
        required: true
      base-branch:
        type: string
        required: true
        default: main
      previous-file:
        type: string
        required: false
        description: Filename containing markdown content from previous regression step
    secrets:
      key:
        required: true
      GH_TOKEN:
        required: true
    outputs:
      pr-branch:
        value: ${{ jobs.exploratory.outputs.pr-branch }}

jobs:
  exploratory:
    name: Generate Exploratory Test Plans - Depth ${{ inputs.depth }}/${{ inputs.max-depth }}
    runs-on: ubuntu-latest
    outputs:
      pr-branch: ${{ steps.create-pr-branch.outputs.pr-branch }}
    steps:
      - id: create-pr-branch
        name: Create PR branch name
        shell: bash
        run: echo "pr-branch=testdriver/exploratory-${{ github.run_id }}-${{ github.run_attempt }}" >> $GITHUB_OUTPUT

      - uses: testdriverai/action@main
        continue-on-error: true
        with:
          key: ${{ secrets.key }}
          prompt: |
            1. /generate web 3 ${{ inputs.previous-file && format('testdriver/{0}', inputs.previous-file) || '' }}
            2. /summarize
          prerun: |
            yarn global add https://github.com/testdriverai/testdriverai#yassine/embed-tests
            cd $env:TEMP
            npm init -y
            npm install dashcam-chrome
            Start-Process "C:/Program Files/Google/Chrome/Application/chrome.exe" -ArgumentList "--start-maximized","--load-extension=$(pwd)/node_modules/dashcam-chrome/build","${{ inputs.website-url }}"
            exit
          create-pr: true
          pr-base: ${{ inputs.base-branch }}
          pr-title: "TestDriver.ai / Generate Test Plans - Depth ${{ inputs.depth }}/${{ inputs.max-depth }}"
          pr-branch: ${{ steps.create-pr-branch.outputs.pr-branch }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FORCE_COLOR: "3"
